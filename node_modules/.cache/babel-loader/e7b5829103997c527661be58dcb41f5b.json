{"ast":null,"code":"var _jsxFileName = \"/workspace/heyyy/final/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createFirestoreInstance, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbconfig';\nimport firebase from 'firebase/app'; // import { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n// import { createFirestoreInstance } from 'redux-firestore'\n\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/storage';\nimport 'firebase/functions'; // const store = createStore(\n//   rootReducer,\n//   initialState,\n//   compose(\n//    //reactReduxFirebase(firebase, rrfConfig), // removed\n//    //reduxFirestore(firebase)\n//    applyMiddleware(...middleware)       // removed\n//   )\n// )\n\nconst store = createReduxStore();\nimport createReduxStore from './createReduxStore';\nconst rrfConfig = {\n  userProfile: 'users'\n}; // react-redux-firebase config\n// Initialize firebase instance\n\nfirebase.initializeApp(fbConfig); //\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n\n}; // const App = () => (\n//   <Provider store={store}>\n//    <ReactReduxFirebaseProvider {...rrfProps}>\n//       <Todos />\n//    </ReactReduxFirebaseProvider>\n//   </Provider>\n// );\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(ReactReduxFirebaseProvider, Object.assign({}, rrfProps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 41\n  }\n}), /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 83\n  }\n}))), document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/workspace/heyyy/final/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","compose","rootReducer","Provider","thunk","createFirestoreInstance","getFirestore","ReactReduxFirebaseProvider","getFirebase","fbConfig","firebase","store","createReduxStore","rrfConfig","userProfile","initializeApp","rrfProps","config","dispatch","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,uBAAT,EAAkCC,YAAlC,QAAsD,iBAAtD;AACA,SAASC,0BAAT,EAAqCC,WAArC,QAAwD,sBAAxD;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,QAAP,MAAqB,cAArB,C,CACA;AACA;;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAEC,gBAAgB,EAA7B;AACA,OAAOA,gBAAP,MAA6B,oBAA7B;AAGA,MAAMC,SAAS,GAAG;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAAlB,C,CAA2C;AAE3C;;AACAJ,QAAQ,CAACK,aAAT,CAAuBN,QAAvB,E,CACA;;AAIA,MAAMO,QAAQ,GAAG;AAChBN,EAAAA,QADgB;AAEhBO,EAAAA,MAAM,EAAEJ,SAFQ;AAGbK,EAAAA,QAAQ,EAAEP,KAAK,CAACO,QAHH;AAIdb,EAAAA,uBAJc,CAIU;;AAJV,CAAjB,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGAT,QAAQ,CAACuB,MAAT,eAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwB,oBAAC,0BAAD,oBAAgCK,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA0C,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA1C,CAAxB,CAAhB,EAAmII,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnI;AACAvB,aAAa,CAACwB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbconfig'\nimport firebase from 'firebase/app'\n// import { ReactReduxFirebaseProvider } from 'react-redux-firebase'\n// import { createFirestoreInstance } from 'redux-firestore'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport 'firebase/storage'\nimport 'firebase/functions'\n\n\n// const store = createStore(\n//   rootReducer,\n//   initialState,\n//   compose(\n//    //reactReduxFirebase(firebase, rrfConfig), // removed\n//    //reduxFirestore(firebase)\n//    applyMiddleware(...middleware)       // removed\n//   )\n// )\n\nconst store= createReduxStore()\nimport createReduxStore from './createReduxStore'\n\n\nconst rrfConfig = { userProfile: 'users' } // react-redux-firebase config\n\n// Initialize firebase instance\nfirebase.initializeApp(fbConfig)\n//\n\n\n\nconst rrfProps = {\n\tfirebase,\n\tconfig: rrfConfig,\n    dispatch: store.dispatch,\n   createFirestoreInstance // <- needed if using firestore\n }\n// const App = () => (\n//   <Provider store={store}>\n//    <ReactReduxFirebaseProvider {...rrfProps}>\n//       <Todos />\n//    </ReactReduxFirebaseProvider>\n//   </Provider>\n// );\n\n\nReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...rrfProps}><App /></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}