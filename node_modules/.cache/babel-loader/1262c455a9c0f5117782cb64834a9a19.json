{"ast":null,"code":"import _objectSpread from\"/workspace/final/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";export var createProject=function createProject(project){return function(dispatch,getState,_ref){var getFirebase=_ref.getFirebase,getFirestore=_ref.getFirestore;// make async call to database\nvar firestore=getFirestore();var profile=getState().firebase.profile;var authorID=getState().firebase.auth.uid;firestore.collection('projects').add(_objectSpread(_objectSpread({},project),{},{authorFirstName:profile.firstName,authorLastName:profile.lastName,authorId:authorID,createdAt:new Date()})).then(function(){dispatch({type:'CREATE_PROJECT_SUCCESS'});}).catch(function(err){dispatch({type:'CREATE_PROJECT_ERROR'},err);});};};","map":{"version":3,"sources":["/workspace/final/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorID","auth","uid","collection","add","authorFirstName","firstName","authorLastName","lastName","authorId","createdAt","Date","then","type","catch","err"],"mappings":"sIAAA,MAAO,IAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,OAAD,CAAa,CACxC,MAAO,UAACC,QAAD,CAAWC,QAAX,MAAqD,IAA/BC,CAAAA,WAA+B,MAA/BA,WAA+B,CAAlBC,YAAkB,MAAlBA,YAAkB,CAC1D;AACA,GAAMC,CAAAA,SAAS,CAAGD,YAAY,EAA9B,CACH,GAAME,CAAAA,OAAO,CAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC,CACA,GAAME,CAAAA,QAAQ,CAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C,CACGL,SAAS,CAACM,UAAV,CAAqB,UAArB,EAAiCC,GAAjC,gCACKZ,OADL,MAEEa,eAAe,CAAEP,OAAO,CAACQ,SAF3B,CAGEC,cAAc,CAAET,OAAO,CAACU,QAH1B,CAIEC,QAAQ,CAAET,QAJZ,CAKEU,SAAS,CAAE,GAAIC,CAAAA,IAAJ,EALb,IAMGC,IANH,CAMQ,UAAM,CACZnB,QAAQ,CAAC,CAAEoB,IAAI,CAAE,wBAAR,CAAD,CAAR,CACD,CARD,EAQGC,KARH,CAQS,SAAAC,GAAG,CAAI,CACdtB,QAAQ,CAAC,CAAEoB,IAAI,CAAE,sBAAR,CAAD,CAAmCE,GAAnC,CAAR,CACD,CAVD,EAWD,CAhBD,CAiBD,CAlBM","sourcesContent":["export const createProject = (project) => {\n  return (dispatch, getState, {getFirebase, getFirestore}) => {\n    // make async call to database\n    const firestore = getFirestore();\n\tconst profile = getState().firebase.profile;\n\tconst authorID = getState().firebase.auth.uid;\n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorID,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};"]},"metadata":{},"sourceType":"module"}